// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SyntaxHighlighter component renders correctly without inline styles when useInlineStyles=false 1`] = `
<pre
  className="hljs"
  style={{}}
>
  <code
    className="language-javascript"
    style={
      {
        "whiteSpace": "pre",
      }
    }
  >
    <span
      className="hljs-keyword"
    >
      const
    </span>
    <span
      className=""
    >
       
    </span>
    <span
      className="hljs-title function_"
    >
      woah
    </span>
    <span
      className=""
    >
       = fun =&gt; fun + 
    </span>
    <span
      className="hljs-number"
    >
      1
    </span>
    <span
      className=""
    >
      ;

    </span>
    <span
      className=""
    />
    <span
      className="hljs-keyword"
    >
      const
    </span>
    <span
      className=""
    >
       dude = 
    </span>
    <span
      className="hljs-title function_"
    >
      woah
    </span>
    <span
      className=""
    >
      (
    </span>
    <span
      className="hljs-number"
    >
      2
    </span>
    <span
      className=""
    >
      ) + 
    </span>
    <span
      className="hljs-number"
    >
      3
    </span>
    <span
      className=""
    >
      ;

    </span>
    <span
      className=""
    />
    <span
      className="hljs-keyword"
    >
      function
    </span>
    <span
      className=""
    >
       
    </span>
    <span
      className="hljs-title function_"
    >
      thisIsAFunction
    </span>
    <span
      className=""
    >
      (
    </span>
    <span
      className=""
    >
      ) {

    </span>
    <span
      className=""
    >
        
    </span>
    <span
      className="hljs-keyword"
    >
      return
    </span>
    <span
      className=""
    >
       [
    </span>
    <span
      className="hljs-number"
    >
      1
    </span>
    <span
      className=""
    >
      ,
    </span>
    <span
      className="hljs-number"
    >
      2
    </span>
    <span
      className=""
    >
      ,
    </span>
    <span
      className="hljs-number"
    >
      3
    </span>
    <span
      className=""
    >
      ].
    </span>
    <span
      className="hljs-title function_"
    >
      map
    </span>
    <span
      className=""
    >
      (
    </span>
    <span
      className="hljs-function hljs-params"
    >
      n
    </span>
    <span
      className="hljs-function"
    >
       =&gt;
    </span>
    <span
      className=""
    >
       n + 
    </span>
    <span
      className="hljs-number"
    >
      1
    </span>
    <span
      className=""
    >
      ).
    </span>
    <span
      className="hljs-title function_"
    >
      filter
    </span>
    <span
      className=""
    >
      (n !== 
    </span>
    <span
      className="hljs-number"
    >
      3
    </span>
    <span
      className=""
    >
      );

    </span>
    }

    <span
      className=""
    />
    <span
      className="hljs-variable language_"
    >
      console
    </span>
    <span
      className=""
    >
      .
    </span>
    <span
      className="hljs-title function_"
    >
      log
    </span>
    <span
      className=""
    >
      (
    </span>
    <span
      className="hljs-string"
    >
      'making up fake code is really hard'
    </span>
    <span
      className=""
    >
      );

    </span>
    

    <span
      className=""
    />
    <span
      className="hljs-keyword"
    >
      function
    </span>
    <span
      className=""
    >
       
    </span>
    <span
      className="hljs-title function_"
    >
      itIs
    </span>
    <span
      className=""
    >
      (
    </span>
    <span
      className=""
    >
      ) {

    </span>
    <span
      className=""
    >
        
    </span>
    <span
      className="hljs-keyword"
    >
      return
    </span>
    <span
      className=""
    >
       
    </span>
    <span
      className="hljs-string"
    >
      'no seriously really it is'
    </span>
    <span
      className=""
    >
      ;

    </span>
    }

  </code>
</pre>
`;
