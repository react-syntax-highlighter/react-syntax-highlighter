// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SyntaxHighlighter allows lineProps as an object 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code
    className="language-javascript"
    style={
      Object {
        "whiteSpace": "pre",
      }
    }
  >
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        const
      </span>
      <span
        style={Object {}}
      >
         woah = 
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        fun
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         =&gt;
      </span>
      <span
        style={Object {}}
      >
         fun + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        const
      </span>
      <span
        style={Object {}}
      >
         dude = woah(
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        2
      </span>
      <span
        style={Object {}}
      >
        ) + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        thisIsAFunction
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        ) 
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         [
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ,
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        2
      </span>
      <span
        style={Object {}}
      >
        ,
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        ].map(
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        n
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         =&gt;
      </span>
      <span
        style={Object {}}
      >
         n + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ).filter(n !== 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        );

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        style={
          Object {
            "color": "#397300",
          }
        }
      >
        console
      </span>
      <span
        style={Object {}}
      >
        .log(
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        'making up fake code is really hard'
      </span>
      <span
        style={Object {}}
      >
        );

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        itIs
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        ) 
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        'no seriously really it is'
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      
    </span>
  </code>
</pre>
`;

exports[`SyntaxHighlighter allows lineProps as function 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code
    className="language-javascript"
    style={
      Object {
        "whiteSpace": "pre",
      }
    }
  >
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        const
      </span>
      <span
        style={Object {}}
      >
         woah = 
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        fun
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         =&gt;
      </span>
      <span
        style={Object {}}
      >
         fun + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        const
      </span>
      <span
        style={Object {}}
      >
         dude = woah(
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        2
      </span>
      <span
        style={Object {}}
      >
        ) + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        thisIsAFunction
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        ) 
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         [
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ,
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        2
      </span>
      <span
        style={Object {}}
      >
        ,
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        ].map(
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        n
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         =&gt;
      </span>
      <span
        style={Object {}}
      >
         n + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ).filter(n !== 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        );

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        style={
          Object {
            "color": "#397300",
          }
        }
      >
        console
      </span>
      <span
        style={Object {}}
      >
        .log(
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        'making up fake code is really hard'
      </span>
      <span
        style={Object {}}
      >
        );

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        itIs
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        ) 
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        'no seriously really it is'
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      }

    </span>
    <span
      style={
        Object {
          "color": "red",
        }
      }
    >
      
    </span>
  </code>
</pre>
`;

exports[`SyntaxHighlighter component renders correctly 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code
    className="language-javascript"
    style={
      Object {
        "whiteSpace": "pre",
      }
    }
  >
    <span
      style={Object {}}
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        const
      </span>
      <span
        style={Object {}}
      >
         woah = 
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        fun
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         =&gt;
      </span>
      <span
        style={Object {}}
      >
         fun + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={Object {}}
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        const
      </span>
      <span
        style={Object {}}
      >
         dude = woah(
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        2
      </span>
      <span
        style={Object {}}
      >
        ) + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={Object {}}
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        thisIsAFunction
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        ) 
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={Object {}}
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         [
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ,
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        2
      </span>
      <span
        style={Object {}}
      >
        ,
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        ].map(
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        n
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         =&gt;
      </span>
      <span
        style={Object {}}
      >
         n + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ).filter(n !== 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        3
      </span>
      <span
        style={Object {}}
      >
        );

      </span>
    </span>
    <span
      style={Object {}}
    >
      }

    </span>
    <span
      style={Object {}}
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        style={
          Object {
            "color": "#397300",
          }
        }
      >
        console
      </span>
      <span
        style={Object {}}
      >
        .log(
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        'making up fake code is really hard'
      </span>
      <span
        style={Object {}}
      >
        );

      </span>
    </span>
    <span
      style={Object {}}
    >
      

    </span>
    <span
      style={Object {}}
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        itIs
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
        ) 
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={Object {}}
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        'no seriously really it is'
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={Object {}}
    >
      }

    </span>
    <span
      style={Object {}}
    >
      
    </span>
  </code>
</pre>
`;

exports[`SyntaxHighlighter renders java code correctly with wrapLines 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <code
    className="language-java"
    style={
      Object {
        "whiteSpace": "pre",
      }
    }
  >
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        package
      </span>
      <span
        style={Object {}}
      >
         com.javatest;

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
        
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        public
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-class"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        class
      </span>
      <span
        className="hljs-class"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-class"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        BubbleSort
      </span>
      <span
        className="hljs-class"
        style={Object {}}
      >
         
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "color": "#888888",
          }
        }
      >
        /**

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "color": "#888888",
          "display": "block",
        }
      }
    >
         * Applies bubble sort to an array and returns whether the array was sorted correctly.

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={
          Object {
            "color": "#888888",
          }
        }
      >
           */
      </span>
      <span
        style={Object {}}
      >
        

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        public
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        boolean
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        checkSort
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function hljs-params"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        int
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        [] a)
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          sort(a);

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
            
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        for
      </span>
      <span
        style={Object {}}
      >
         (
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        int
      </span>
      <span
        style={Object {}}
      >
         i = 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        0
      </span>
      <span
        style={Object {}}
      >
        ; i &lt; a.length - 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ; i++) {

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
              
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        if
      </span>
      <span
        style={Object {}}
      >
         (a[i] &gt; a[i + 
      </span>
      <span
        style={
          Object {
            "color": "#880000",
          }
        }
      >
        1
      </span>
      <span
        style={Object {}}
      >
        ]) {

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
                
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        false
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
            }

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
          }

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
            
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        return
      </span>
      <span
        style={Object {}}
      >
         
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        true
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
        }

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        style={
          Object {
            "color": "#888888",
          }
        }
      >
        /**

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "color": "#888888",
          "display": "block",
        }
      }
    >
         * Bubble sort an array, mutating the array (contains a bug).

    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={
          Object {
            "color": "#888888",
          }
        }
      >
           */
      </span>
      <span
        style={Object {}}
      >
        

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
          
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        public
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        void
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        className="hljs-function"
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        sort
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
        (
      </span>
      <span
        className="hljs-function hljs-params"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        int
      </span>
      <span
        className="hljs-function hljs-params"
        style={Object {}}
      >
         [] a)
      </span>
      <span
        className="hljs-function"
        style={Object {}}
      >
         
      </span>
      <span
        style={Object {}}
      >
        {

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
            
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        int
      </span>
      <span
        style={Object {}}
      >
         j;

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
            
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        boolean
      </span>
      <span
        style={Object {}}
      >
         flag = 
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        true
      </span>
      <span
        style={Object {}}
      >
        ;

      </span>
    </span>
    <span
      style={
        Object {
          "backgroundColor": "#A9DBB8",
          "display": "block",
        }
      }
    >
      <span
        style={Object {}}
      >
            
      </span>
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        int
      </span>
      <span
        style={Object {}}
      >
         temp;
      </span>
    </span>
  </code>
</pre>
`;
